title Exercise 0.4


browser->server: HTTP POST studies.cs.helsinki.fi/exampleapp/new_note
server-->browser: Redirect url studies.cs.helsinki.fi/exampleapp/notes
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/notes
server-->browser: HTML-code
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
server-->browser: main.css
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.js
server-->browser: main.js

note over browser:
browser starts executing js-code
that requests JSON data from server 
end note

browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
server-->browser: [JSON containing note content]
note over browser:
browser executes the event handler
that renders notes to display
end note
browser->server: HTTP GET https://studies.cs.helsinki.fi/favicon.ico
server-->browser: Favicon image

title Exercise 0.5


browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa
server-->browser: HTML-code
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
server-->browser: main.css
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa.js
server-->browser: spa.js

note over browser:
browser starts executing js-code
that requests JSON data from server 
end note

browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
server-->browser: [JSON containing note content]
note over browser:
browser executes the event handler
that renders notes to display
end note
browser->server: HTTP GET https://studies.cs.helsinki.fi/favicon.ico
server-->browser: Favicon image



title Exercise 0.6

note over browser:
upon submission, the browser runs the function
attached to the submit button. This creates the
new note and adds it to the list, then redraws the
notes on the browser side. Then sends the new note
to the server
end note
browser->server: HTTP POST https://studies.cs.helsinki.fi/exampleapp/new_note_spa
server-->browser: note created message
